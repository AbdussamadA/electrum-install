#!/bin/bash
function identify_os () {
	local name="unknown"
	if [ -f /etc/os-release ]
	then
		source /etc/os-release
		name="$ID"
	elif [ -f /etc/lsb-release ]
	then
		source /etc/lsb-release
		name=`echo $DISTRIB_ID | tr '[:upper]' '[:lower]'`
	fi
	echo $name;
}

function not_implemented () {
	echo "NOTE: Dependency installation for this OS has not been implemented yet"
}

function install_dependencies () {
	echo "Checking if dependencies are installed and installing as necessary..."
	OS=`identify_os`
	case "$OS" in
		opensuse|suse)
			not_implemented
			;;
		debian|*buntu)
			if [[ $OS =~ buntu$ ]]
			then
				add-apt-repository universe
			fi
			apt-get update 
			apt-get install -qy  python3-setuptools python3-pyqt5 python3-pip dirmngr
			;;
		*)
			echo "Unknown OS. Can't install dependencies";
			;;
	esac
}

thomasv_pubkey="0x6694D8DE7BE8EE5631BED9502BD5824B7F9470E6"

if [ -z "$1" ]
then
	echo "Usage $0 [version]"
	exit 1
fi

install_dependencies

version="$1"
mkdir installation-logs
cd installation-logs
mkdir $version
cd $version

filename="Electrum-$version.tar.gz"
wget https://download.electrum.org/$version/$filename https://download.electrum.org/$version/$filename.asc 

gpg --list-keys $thomasv_pubkey || gpg --keyserver pgp.mit.edu --recv-keys $thomasv_pubkey
gpg --verify $filename.asc $filename

if [ $? -eq 0 ]
then
	response="n"
	read -p "GPG sig checks out. Proceed with installation (N,y): " response
	if [ "$response" == "y" ]
	then
		echo "Proceeding with install"
		pip3 install --log=installation.log -vvv $filename
	else
		echo "Not proceeding with install"
	fi
else 
	echo "GPG sig check failed!"
fi

echo "Cleaning up..."
rm $filename $filename.asc
